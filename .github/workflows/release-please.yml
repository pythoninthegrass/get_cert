name: Release Please

on:
  push:
    branches: ['main', 'master']
    paths:
      - 'get_cert.py'
      - 'get_cert.spec'
      - 'requirements.txt'
      - '*.md'
  pull_request:
    branches: ['main', 'master']
    paths:
      - 'get_cert.py'
      - 'get_cert.spec'
      - 'requirements.txt'
      - '*.md'

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

    steps:
      - name: Release with release-please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  download-artifacts:
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    outputs:
      artifacts_found: ${{ steps.check-artifacts.outputs.artifacts_found }}

    steps:
      - name: Download workflow artifacts
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          workflow_conclusion: success
          branch: ${{ github.event_name == 'push' && github.ref_name || github.ref }}
          path: artifacts
          if_no_artifact_found: warn

      - name: Check for artifacts
        id: check-artifacts
        run: |
          if [ -d "artifacts" ] && [ "$(ls -A artifacts)" ]; then
            echo "artifacts_found=true" >> $GITHUB_OUTPUT
          else
            echo "artifacts_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: steps.check-artifacts.outputs.artifacts_found == 'true'
        with:
          name: release-artifacts
          path: artifacts

  upload-release-assets:
    needs: [release-please, download-artifacts]
    if: >
      needs.release-please.outputs.release_created == 'true' &&
      needs.download-artifacts.outputs.artifacts_found == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: release-artifacts
          path: artifacts

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in artifacts/*/*.zip; do
            gh release upload ${{ needs.release-please.outputs.tag_name }} $file --clobber
          done
